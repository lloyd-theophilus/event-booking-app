apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.deployment.namespace }}  # Namespace is under `deployment` in values
  labels:
    app: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
      - name: {{ .Values.app.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: {{ .Values.service.targetPort }}  # Use service's targetPort (3000)
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: POSTGRES_URL  # Fixed typo: `postgrel_URL` → `POSTGRES_URL`
          value: {{ .Values.env.postgres_URL | quote }}  # Ensure variable exists in values
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      strategy:  # Fixed typo: `rollingstrategy` → `strategy`
        type: RollingUpdate
        rollingUpdate:
          maxSurge: {{ .Values.rollingUpdate.maxSurge }}
          maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}